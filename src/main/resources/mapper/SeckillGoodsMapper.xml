<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.miller.seckill.mapper.SeckillGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.miller.seckill.domain.SeckillGoods" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="seckill_price" property="seckillPrice" jdbcType="DECIMAL" />
    <result column="stock_count" property="stockCount" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="ende_date" property="endeDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, goods_id, seckill_price, stock_count, start_date, ende_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from seckill_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from seckill_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.miller.seckill.domain.SeckillGoods" >
    insert into seckill_goods (id, goods_id, seckill_price, 
      stock_count, start_date, ende_date
      )
    values (#{id,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, #{seckillPrice,jdbcType=DECIMAL}, 
      #{stockCount,jdbcType=INTEGER}, #{startDate,jdbcType=TIMESTAMP}, #{endeDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.miller.seckill.domain.SeckillGoods" >
    insert into seckill_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="seckillPrice != null" >
        seckill_price,
      </if>
      <if test="stockCount != null" >
        stock_count,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endeDate != null" >
        ende_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="seckillPrice != null" >
        #{seckillPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockCount != null" >
        #{stockCount,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endeDate != null" >
        #{endeDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.miller.seckill.domain.SeckillGoods" >
    update seckill_goods
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="seckillPrice != null" >
        seckill_price = #{seckillPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockCount != null" >
        stock_count = #{stockCount,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endeDate != null" >
        ende_date = #{endeDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.miller.seckill.domain.SeckillGoods" >
    update seckill_goods
    set goods_id = #{goodsId,jdbcType=BIGINT},
      seckill_price = #{seckillPrice,jdbcType=DECIMAL},
      stock_count = #{stockCount,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      ende_date = #{endeDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="reduceStock" parameterType="map">
    update
      seckill_goods
    set
      stock_count = stock_count - 1
    where goods_id  = #{goodsId}
    and start_date <![CDATA[ <= ]]>  #{killTime}
    and ende_date >= #{killTime}
    and stock_count > 0
  </update>
</mapper>